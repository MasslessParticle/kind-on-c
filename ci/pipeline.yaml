resource_types:
- name: google-cloud-storage
  type: registry-image
  source:
    repository: frodenas/gcs-resource

config:
- &imageRepo
  gcr.io/cf-london-servces-k8s/kind-on-c/kind-on-c
- &kindOnCGitSource
  uri: git@github.com:pivotal-k8s/kind-on-c
  branch: dev
  private_key: ((github.push_key))
- &imageBuildingFiles
  - Dockerfile

resources:
- name: base-image
  type: registry-image
  source:
    repository: alpine
- name: image
  type: registry-image
  source:
    repository: *imageRepo
    username: ((registry.username))
    password: ((registry.password))
    tag: ci
- name: kind-build
  type: google-cloud-storage
  source:
    bucket: kind-on-c-pipeline
    json_key: ((bucket.key))
    versioned_file: "pipeline-builds/kind-linux-amd64"
- name: builder-task
  type: git
  source:
    uri: https://github.com/concourse/builder-task
- name: dockerfile
  type: git
  source:
    << : *kindOnCGitSource
    paths: *imageBuildingFiles
- name: kind-on-c-dev
  type: git
  source:
    << : *kindOnCGitSource
    ignore_paths: *imageBuildingFiles
- name: kind-on-c-master
  type: git
  source:
    << : *kindOnCGitSource
    branch: master
- name: kind-release
  type: github-release
  source:
    owner: kubernetes-sigs
    repository: kind
    access_token: ((github.token))
    pre_release: true
- name: kind-git-master
  type: git
  source:
    uri: https://github.com/kubernetes-sigs/kind
    branch: master
- name: k8s-git-1.13
  type: git
  source:
    uri: https://github.com/kubernetes/kubernetes
    branch: release-1.13
- name: k8s-git-1.14
  type: git
  source:
    uri: https://github.com/kubernetes/kubernetes
    branch: release-1.14
- name: k8s-git-1.15
  type: git
  source:
    uri: https://github.com/kubernetes/kubernetes
    branch: release-1.15
- name: k8s-git-master
  type: git
  source:
    uri: https://github.com/kubernetes/kubernetes
    branch: master

jobs:
- name: update image
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: builder-task
      - get: base-image
        trigger: true
      - get: dockerfile
        trigger: true
      - get: kind-on-c-dev
  - task: build
    privileged: true
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: concourse/builder-task
      params:
        REPOSITORY: *imageRepo
        CONTEXT: dockerfile
        TAG: ci
      inputs:
      - name: base-image
      - name: builder-task
      - name: dockerfile
      outputs:
      - name: image
      - name: rootfs
      - name: tag
      caches:
      - path: cache
      run:
        path: bash
        args:
        - -c
        - |
          set -e
          set -u
          set -o pipefail

          kind_on_c_ver="$( git --git-dir=dockerfile/.git describe --always --tags )"
          alpine_ver="$( cat base-image/digest )"

          cat <<EOF > image/build_args
          KIND_ON_C_VERSION=${kind_on_c_ver}
          ALPINE_VERSION=${alpine_ver}
          EOF

          export BUILD_ARGS_FILE=image/build_args
          echo "$TAG" > tag/tag

          builder-task/build

          img ls -s /scratch/state \
            | awk -vimg="${REPOSITORY}:${TAG}" '$0 ~ img { print $NF }' \
            | sed 's/:/-/g' \
            > tag/tag
  - put: image
    params:
      image: image/image.tar
      additional_tags: tag/tag
  # - task: test new image ## TODO
  - task: update image revision
    image: rootfs # use image from the builder task
    config:
      platform: linux
      params:
        GIT_AUTHOR_NAME: "kind-on-c pipeline"
        GIT_AUTHOR_EMAIL: "hhorl+kindonc@pivotal.io"
      inputs:
      - name: tag
      - name: kind-on-c-dev
      outputs:
      - name: kind-on-c-dev
      run:
        path: bash
        args:
        - -c
        - |
          set -e
          set -u
          set -o pipefail

          tag="$( cat tag/tag )"
          taskConf="${PWD}/kind-on-c-dev/kind.yaml"
          tmpFile="$(mktemp)"
          trap 'rm -f -- "$tmpFile"' EXIT

          cd kind-on-c-dev

          yq -y --arg tag "$tag" '.image_resource.source.tag = $tag' "$taskConf" > "$tmpFile"
          cat "$tmpFile" > "$taskConf"

          git config --global user.email "$GIT_AUTHOR_EMAIL"
          git config --global user.name "$GIT_AUTHOR_NAME"

          git add "$taskConf"
          git diff --quiet && git diff --staged --quiet || {
            git commit --quiet --message "Update container image to '${tag}'"
            git show -1 | cat
          }
  - put: kind-on-c-dev
    params:
      repository: kind-on-c-dev

- name: latest kind release
  plan:
  - in_parallel: &commonTestInputsForKindRelease
    - get: kind-on-c
      resource: kind-on-c-dev
      trigger: true
      passed:
      - latest kind release with custom config
      - latest kind release with HA control plane
      - latest kind outputs the node image
    - get: kind-release
      trigger: true
      params:
        globs:
        - kind-linux-amd64
      passed:
      - latest kind release with custom config
      - latest kind release with HA control plane
      - latest kind outputs the node image
  - &testTask
    task: run-tests
    file: kind-on-c/kind.yaml
    privileged: true
    params:
      KIND_TESTS: |
        set -x
        kubectl get nodes -o wide
        kubectl get all --all-namespaces
        kubectl run test --rm=true --image=busybox -i --wait=true --restart=Never --command -- \
          echo 'The pod says: the kubernetes cluster sure works!'
- name: latest kind release with k8s-master
  plan:
  - in_parallel:
    - in_parallel: *commonTestInputsForKindRelease
    - get: k8s-git
      resource: k8s-git-master
  - << : *testTask
- name: latest kind release with k8s-1.15
  plan:
  - in_parallel:
    - in_parallel: *commonTestInputsForKindRelease
    - get: k8s-git
      resource: k8s-git-1.15
  - << : *testTask
- name: latest kind release with k8s-1.14
  plan:
  - in_parallel:
    - in_parallel: *commonTestInputsForKindRelease
    - get: k8s-git
      resource: k8s-git-1.14
      passed:
      - latest kind outputs the node image
  - << : *testTask
- name: latest kind release with k8s-1.13
  plan:
  - in_parallel:
    - in_parallel: *commonTestInputsForKindRelease
    - get: k8s-git
      resource: k8s-git-1.13
  - << : *testTask

- name: promote
  plan:
  - get: kind-on-c-dev
    trigger: true
    passed:
    # all tests for the kind release
    - latest kind release
    - latest kind release with k8s-master
    - latest kind release with k8s-1.15
    - latest kind release with k8s-1.14
    - latest kind release with k8s-1.13
    # all tests for kind master
    - kind master
    - kind master with k8s-1.13
    - kind master with k8s-1.14
    - kind master with k8s-1.15
    - kind master with k8s-master
  - put: kind-on-c-master
    params:
      repository: kind-on-c-dev

- name: build kind from master
  plan:
  - get: kind-git-master
    trigger: true
  - task: build
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: "golang"
          tag: "1.12"
      inputs:
      - name: kind-git-master
        path: src
      outputs:
      - name: kind-bin
      params:
        CGO_ENABLED: 0
        GO111MODULE: "on"
      run:
        path: bash
        args:
        - -c
        - |
          set -e

          cd ./src
          go get -d ./...
          go build main.go

          mv main "../kind-bin/kind-linux-amd64"

          ls -l ../kind-bin/
  - put: kind-build
    params:
      file: kind-bin/kind-linux-amd64

- name: kind master
  plan:
  - in_parallel: &commonTestInputsForKindMaster
    - get: kind-on-c
      resource: kind-on-c-dev
      trigger: true
      passed:
      - latest kind release with custom config
      - latest kind release with HA control plane
      - latest kind outputs the node image
    - get: kind-release
      passed: [ build kind from master ]
      resource: kind-build
      trigger: true
  - *testTask
- name: kind master with k8s-1.13
  plan:
  - in_parallel:
    - in_parallel: *commonTestInputsForKindMaster
    - get: k8s-git
      resource: k8s-git-1.13
  - << : *testTask
- name: kind master with k8s-1.14
  plan:
  - in_parallel:
    - in_parallel: *commonTestInputsForKindMaster
    - get: k8s-git
      resource: k8s-git-1.14
  - << : *testTask
- name: kind master with k8s-1.15
  plan:
  - in_parallel:
    - in_parallel: *commonTestInputsForKindMaster
    - get: k8s-git
      resource: k8s-git-1.15
  - << : *testTask
- name: kind master with k8s-master
  plan:
  - in_parallel:
    - in_parallel: *commonTestInputsForKindMaster
    - get: k8s-git
      resource: k8s-git-master
  - << : *testTask

# additional "feature" tests
- name: latest kind release with HA control plane
  plan:
  - in_parallel: &commonTestInputsForFeatures
    - get: kind-on-c
      resource: kind-on-c-dev
      trigger: true
    - get: kind-release
      trigger: true
      params:
        globs:
        - kind-linux-amd64
  - << : *testTask
    params:
      KIND_CONFIG: |
        kind: Cluster
        apiVersion: kind.sigs.k8s.io/v1alpha3
        nodes:
        - role: control-plane
        - role: control-plane
        - role: control-plane
        - role: worker
      KIND_TESTS: |
        set -x

        expectedNrOfNodes=4      # 1 worker + 3 control plane nodes
        expectedNrOfContainers=5 # 1 worker + 3 control plane + 1 loadbalancer

        actualNrOfContainers=$( kind get nodes | wc -l )
        [[ $expectedNrOfContainers -eq $actualNrOfContainers ]] || {
          echo "Expectd to find ${expectedNrOfContainers} kubernetes nodes, found ${actualNrOfContainers}"
          exit 1
        }

        actualNrOfNodes=$( kubectl get nodes --no-headers | wc -l )
        [[ $expectedNrOfNodes -eq $actualNrOfNodes ]] || {
          echo "Expectd to find ${expectedNrOfNodes} kubernetes nodes, found ${actualNrOfNodes}"
          exit 2
        }
- name: latest kind release with custom config
  plan:
  - in_parallel: *commonTestInputsForFeatures
  - << : *testTask
    params:
      KIND_CONFIG: |
        kind: Cluster
        apiVersion: kind.sigs.k8s.io/v1alpha3
        nodes:
        - role: control-plane
        - role: worker
      KIND_TESTS: |
        set -x
        nrOfNodes=$( kubectl get nodes --no-headers | wc -l )
        [[ $nrOfNodes -eq 2 ]] || {
          echo "Expectd 2 nodes, found $nrOfNodes"
          exit 1
        }
- name: latest kind outputs the node image
  plan:
  - in_parallel:
    - in_parallel: *commonTestInputsForFeatures
    - get: k8s-git
      resource: k8s-git-1.14
  - << : *testTask
    params:
      KIND_EXPORT_IMAGE: 1
      KIND_EXPORT_ROOTFS: 1
      KIND_TESTS: exit 0
  - task: extract node image only
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: concourse/git-resource # any image, that is probably on the worker and has `cp`
      inputs:
      - name: kind-rootfs
      outputs:
      - name: node-rootfs
      run:
        path: bash
        args:
        - -euc
        - |
          cp -a kind-rootfs/node/* node-rootfs/
  - task: run rootfs
    image: node-rootfs # the rootfs, extracted by the previous task, the node image built by kind
    config:
      platform: linux
      inputs:
      - name: kind-image
      run:
        path: bash
        args:
        - -euc
        - |
          expImg='kind-image/node/image.tar'
          test -e "$expImg" || {
            echo >&2 "'${expImg}' not found. What's with that\!?"
            exit 1
          }

groups:
- name: all
  jobs:
  - promote
  - latest kind release
  - latest kind release with k8s-master
  - latest kind release with k8s-1.15
  - latest kind release with k8s-1.14
  - latest kind release with k8s-1.13
  - build kind from master
  - kind master
  - kind master with k8s-1.13
  - kind master with k8s-1.14
  - kind master with k8s-1.15
  - kind master with k8s-master
  - latest kind release with custom config
  - latest kind release with HA control plane
  - latest kind outputs the node image
- name: image
  jobs:
  - update image
- name: kind release
  jobs:
  - latest kind release
  - latest kind release with k8s-master
  - latest kind release with k8s-1.15
  - latest kind release with k8s-1.14
  - latest kind release with k8s-1.13
- name: kind master
  jobs:
  - build kind from master
  - kind master
  - kind master with k8s-1.13
  - kind master with k8s-1.14
  - kind master with k8s-1.15
  - kind master with k8s-master
- name: features
  jobs:
  - latest kind release with custom config
  - latest kind release with HA control plane
  - latest kind outputs the node image
- name: promote
  jobs:
  - promote
